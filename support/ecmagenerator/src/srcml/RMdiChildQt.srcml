<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./gui" filename="RMdiChildQt.h">
  <comment type="block">/** * Copyright (c) 2011-2013 by Andrew
  Mustun. All rights reserved. * * This file is part of the QCAD
  project. * * QCAD is free software: you can redistribute it
  and/or modify * it under the terms of the GNU General Public
  License as published by * the Free Software Foundation, either
  version 3 of the License, or * (at your option) any later
  version. * * QCAD is distributed in the hope that it will be
  useful, * but WITHOUT ANY WARRANTY; without even the implied
  warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE. See the * GNU General Public License for more details. *
  * You should have received a copy of the GNU General Public
  License * along with QCAD. */</comment>
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RMDICHILDQT_H</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RMDICHILDQT_H</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"gui_global.h"</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QMdiSubWindow&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RDebug.h"</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RModifiedListener.h"</cpp:file></cpp:include>
  <class_decl>class 
  <name>RDocument</name>;</class_decl>
  <class_decl>class 
  <name>RDocumentInterface</name>;</class_decl>
  <class_decl>class 
  <name>RGraphicsViewQt</name>;</class_decl>
  <comment type="block">/** * \brief MDI child window. * * \ingroup
  gui * * \scriptable */</comment>
  <class>class 
  <macro>
    <name>QCADGUI_EXPORT</name>
  </macro>
  <name>RMdiChildQt</name>
  <super>: 
  <specifier>public</specifier>
  <name>QMdiSubWindow</name>, 
  <specifier>public</specifier>
  <name>RModifiedListener</name></super>
  <block>{
  <private type="default">
    <macro>
      <name>Q_OBJECT</name>
    </macro>
  </private>
  <public>public: 
  <constructor_decl>
  <name>RMdiChildQt</name>
  <parameter_list>(
  <param>
    <decl>
    <type>
    <name>QWidget</name>*</type>
    <name>parent</name>=
    <init>
      <expr>
        <name>NULL</name>
      </expr>
    </init></decl>
  </param>)</parameter_list>;</constructor_decl>
  <destructor_decl>
  <specifier>virtual</specifier>
  <name>~RMdiChildQt</name>
  <parameter_list>()</parameter_list>;</destructor_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>setDocumentInterface</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>RDocumentInterface</name>*</type>
      <name>di</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
  <name>RDocumentInterface</name>*</type>
  <name>getDocumentInterface</name>
  <parameter_list>()</parameter_list>;</function_decl>
  <function_decl>
  <type>
  <name>RDocument</name>*</type>
  <name>getDocument</name>
  <parameter_list>()</parameter_list>;</function_decl>
  <function_decl>
  <type>
  <name>RGraphicsViewQt</name>*</type>
  <name>getLastKnownViewWithFocus</name>
  <parameter_list>()</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>virtual</name>
    <name>void</name>
  </type>
  <name>updateModifiedListener</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>RStorage</name>*</type>
      <name>storage</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <function>
    <type>
      <name>void</name>
    </type>
    <name>setCloseEventRejected</name>
    <parameter_list>()</parameter_list>
    <block>{ 
    <expr_stmt>
    <expr>
    <name>closeEventAccepted</name>= 
    <name>false</name></expr>;</expr_stmt>}</block>
  </function>
  <function>
    <type>
      <name>void</name>
    </type>
    <name>setCloseEventAccepted</name>
    <parameter_list>()</parameter_list>
    <block>{ 
    <expr_stmt>
    <expr>
    <name>closeEventAccepted</name>= 
    <name>true</name></expr>;</expr_stmt>}</block>
  </function>
  <function>
    <type>
      <name>bool</name>
    </type>
    <name>isCloseEventAccepted</name>
    <parameter_list>()</parameter_list>
    <block>{ 
    <return>return 
    <expr>
      <name>closeEventAccepted</name>
    </expr>;</return>}</block>
  </function>
  <label>
  <name>signals</name>:</label>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>closeRequested</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>RMdiChildQt</name>*</type>
      <name>mdiChild</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>closeAccepted</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>RMdiChildQt</name>*</type>
      <name>mdiChild</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>modifiedStatusChanged</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>RMdiChildQt</name>*</type>
      <name>mdiChild</name>
    </decl>
  </param>)</parameter_list>;</function_decl></public>
  <protected>protected: 
  <function_decl>
  <type>
    <name>virtual</name>
    <name>void</name>
  </type>
  <name>closeEvent</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>QCloseEvent</name>*</type>
      <name>closeEvent</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>virtual</name>
    <name>QSize</name>
  </type>
  <name>sizeHint</name>
  <parameter_list>()</parameter_list>
  <specifier>const</specifier>;</function_decl></protected>
  <private>private: 
  <decl_stmt>
  <decl>
    <type>
    <name>RDocumentInterface</name>*</type>
    <name>documentInterface</name>
  </decl>;</decl_stmt>
  <decl_stmt>
  <decl>
    <type>
    <name>static</name>
    <name>RDocumentInterface</name>*</type>
    <name>diLast</name>
  </decl>;</decl_stmt>
  <decl_stmt>
  <decl>
    <type>
      <name>bool</name>
    </type>
    <name>closeEventAccepted</name>
  </decl>;</decl_stmt></private>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RMdiChildQt*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
